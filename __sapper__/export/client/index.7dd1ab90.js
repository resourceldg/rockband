import{S as e,i as a,s as n,e as t,t as o,h as s,j as i,c as r,a as l,k as c,d as f,l as p,m,b as u,f as d,g as h,o as g,n as y,p as w,q as $,r as b}from"./client.e3021870.js";import{C as S}from"./Code.c843ff04.js";function v(e){let a,n,v,k,T,C,E,A,j,I,x,M,H,P,R,D,K,V,z,O,U,Y,q,B,F,J,W,G,L,N,Q,X,Z,_,ee,ae,ne,te,oe,se,ie,re,le,ce,fe,pe,me,ue,de;return te=new S({props:{code:"$ npm install smelte or yarn add smelte"}}),se=new S({props:{code:'const smelte=require("smelte/rollup-plugin-smelte");\n\nplugins=[ \n  ...your plugins, \n  smelte({ \n    purge: production,\n    output: "public/global.css", // it defaults to static/global.css which is probably what you expect in Sapper \n    postcss: [], // Your PostCSS plugins\n    whitelist: [], // Array of classnames whitelisted from purging\n    whitelistPatterns: [], // Same as above, but list of regexes\n    tailwind: { \n      colors: { \n        primary: "#b027b0",\n        secondary: "#009688",\n        error: "#f44336",\n        success: "#4caf50",\n        alert: "#ff9800",\n        blue: "#2196f3",\n        dark: "#212121" \n      }, // Object of colors to generate a palette from, and then all the utility classes\n      darkMode: true, \n    }, \n    // Any other props will be applied on top of default Smelte tailwind.config.js\n  }),\n]'}}),re=new S({props:{code:'import "smelte/src/tailwind.css" ;'}}),ce=new S({props:{code:'<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">'}}),pe=new S({props:{code:'<link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500|Material+Icons&display=swap"\n    rel="stylesheet" />'}}),ue=new S({props:{code:'import Button from "smelte/src/components/Button";\nimport Treeview from "smelte/src/components/Treeview";'}}),{c(){a=t("h2"),n=o("Hi"),v=s(),k=t("p"),T=o("Smelte is a UI framework built on top of Svelte and\n  "),C=t("a"),E=o("Tailwind CSS"),A=o("\n  using Material Design spec. It comes with many components and utility\n  functions making it easy to build beautiful responsive layouts while keeping\n  bundle size and performance at check all thanks to Svelte. The project was\n  initially inspired by\n  "),j=t("a"),I=o("Vuetify,"),x=o("\n  but comes at much lower price. The website you're viewing is only a fraction\n  of both JS (670 vs 40 Kb) and CSS (110 vs 10 Kb) payloads of even the most\n  "),M=t("a"),H=o("basic Vuetify example layout)"),P=o("\n  , and of course has\n  "),R=t("a"),D=o("dark mode."),K=s(),V=t("p"),z=o("Tailwind resets much of CSS whereas Smelte tries to bring sensible Material\n  design defaults in\n  "),O=t("a"),U=o("typography"),Y=o("\n  and\n  "),q=t("a"),B=o("color."),F=s(),J=t("p"),W=o("Hit up the components\n  "),G=t("a"),L=o("introduction"),N=o("\n  or please join our\n  "),Q=t("a"),X=o("Discord chat"),Z=o("\n  for a lovely chat!"),_=s(),ee=t("h4"),ae=o("Installation"),ne=o("\nTo get you started you need to add Smelte to your dependencies with your\nfavorite package manager.\n"),i(te.$$.fragment),oe=o("\nThen you need to add Smelte Rollup plugin (Webpack is on its way).\n"),i(se.$$.fragment),ie=o("\nThen you should add Tailwind utilites CSS in your app component.\n"),i(re.$$.fragment),le=o("\nYou might also need to include material icons in your template's if you use any:\n"),i(ce.$$.fragment),fe=o("\nOr ship them along with Roboto if you would like to use default material font:\n"),i(pe.$$.fragment),me=o("\nAnd you're good to go and have all the Tailwind CSS power all to yourself! For\ntreeshaking to work it is recommended to import each component on its own like\nthis:\n"),i(ue.$$.fragment),this.h()},l(e){a=r(e,"H2",{});var t=l(a);n=c(t,"Hi"),t.forEach(f),v=p(e),k=r(e,"P",{class:!0});var o=l(k);T=c(o,"Smelte is a UI framework built on top of Svelte and\n  "),C=r(o,"A",{class:!0,href:!0});var s=l(C);E=c(s,"Tailwind CSS"),s.forEach(f),A=c(o,"\n  using Material Design spec. It comes with many components and utility\n  functions making it easy to build beautiful responsive layouts while keeping\n  bundle size and performance at check all thanks to Svelte. The project was\n  initially inspired by\n  "),j=r(o,"A",{class:!0,href:!0});var i=l(j);I=c(i,"Vuetify,"),i.forEach(f),x=c(o,"\n  but comes at much lower price. The website you're viewing is only a fraction\n  of both JS (670 vs 40 Kb) and CSS (110 vs 10 Kb) payloads of even the most\n  "),M=r(o,"A",{class:!0,href:!0});var u=l(M);H=c(u,"basic Vuetify example layout)"),u.forEach(f),P=c(o,"\n  , and of course has\n  "),R=r(o,"A",{class:!0,href:!0});var d=l(R);D=c(d,"dark mode."),d.forEach(f),o.forEach(f),K=p(e),V=r(e,"P",{class:!0});var h=l(V);z=c(h,"Tailwind resets much of CSS whereas Smelte tries to bring sensible Material\n  design defaults in\n  "),O=r(h,"A",{class:!0,href:!0});var g=l(O);U=c(g,"typography"),g.forEach(f),Y=c(h,"\n  and\n  "),q=r(h,"A",{class:!0,href:!0});var y=l(q);B=c(y,"color."),y.forEach(f),h.forEach(f),F=p(e),J=r(e,"P",{});var w=l(J);W=c(w,"Hit up the components\n  "),G=r(w,"A",{class:!0,href:!0});var $=l(G);L=c($,"introduction"),$.forEach(f),N=c(w,"\n  or please join our\n  "),Q=r(w,"A",{class:!0,href:!0});var b=l(Q);X=c(b,"Discord chat"),b.forEach(f),Z=c(w,"\n  for a lovely chat!"),w.forEach(f),_=p(e),ee=r(e,"H4",{id:!0,class:!0});var S=l(ee);ae=c(S,"Installation"),S.forEach(f),ne=c(e,"\nTo get you started you need to add Smelte to your dependencies with your\nfavorite package manager.\n"),m(te.$$.fragment,e),oe=c(e,"\nThen you need to add Smelte Rollup plugin (Webpack is on its way).\n"),m(se.$$.fragment,e),ie=c(e,"\nThen you should add Tailwind utilites CSS in your app component.\n"),m(re.$$.fragment,e),le=c(e,"\nYou might also need to include material icons in your template's if you use any:\n"),m(ce.$$.fragment,e),fe=c(e,"\nOr ship them along with Roboto if you would like to use default material font:\n"),m(pe.$$.fragment,e),me=c(e,"\nAnd you're good to go and have all the Tailwind CSS power all to yourself! For\ntreeshaking to work it is recommended to import each component on its own like\nthis:\n"),m(ue.$$.fragment,e),this.h()},h(){u(C,"class","a"),u(C,"href","https://tailwindcss.com"),u(j,"class","a"),u(j,"href","https://vuetifyjs.com"),u(M,"class","a"),u(M,"href","https://vuetifyjs.com/en/examples/layouts/baseline"),u(R,"class","a"),u(R,"href","dark-mode"),u(k,"class","pb-4"),u(O,"class","a"),u(O,"href","/typography"),u(q,"class","a"),u(q,"href","/color"),u(V,"class","pb-4"),u(G,"class","a"),u(G,"href","/components"),u(Q,"class","a"),u(Q,"href","https://discord.gg/32e2zU6"),u(ee,"id","installation"),u(ee,"class","mt-8 pb-4")},m(e,t){d(e,a,t),h(a,n),d(e,v,t),d(e,k,t),h(k,T),h(k,C),h(C,E),h(k,A),h(k,j),h(j,I),h(k,x),h(k,M),h(M,H),h(k,P),h(k,R),h(R,D),d(e,K,t),d(e,V,t),h(V,z),h(V,O),h(O,U),h(V,Y),h(V,q),h(q,B),d(e,F,t),d(e,J,t),h(J,W),h(J,G),h(G,L),h(J,N),h(J,Q),h(Q,X),h(J,Z),d(e,_,t),d(e,ee,t),h(ee,ae),d(e,ne,t),g(te,e,t),d(e,oe,t),g(se,e,t),d(e,ie,t),g(re,e,t),d(e,le,t),g(ce,e,t),d(e,fe,t),g(pe,e,t),d(e,me,t),g(ue,e,t),de=!0},p:y,i(e){de||(w(te.$$.fragment,e),w(se.$$.fragment,e),w(re.$$.fragment,e),w(ce.$$.fragment,e),w(pe.$$.fragment,e),w(ue.$$.fragment,e),de=!0)},o(e){$(te.$$.fragment,e),$(se.$$.fragment,e),$(re.$$.fragment,e),$(ce.$$.fragment,e),$(pe.$$.fragment,e),$(ue.$$.fragment,e),de=!1},d(e){e&&f(a),e&&f(v),e&&f(k),e&&f(K),e&&f(V),e&&f(F),e&&f(J),e&&f(_),e&&f(ee),e&&f(ne),b(te,e),e&&f(oe),b(se,e),e&&f(ie),b(re,e),e&&f(le),b(ce,e),e&&f(fe),b(pe,e),e&&f(me),b(ue,e)}}}export default class extends e{constructor(e){super(),a(this,e,null,v,n,{})}}
