import{_ as e,a as n,b as a,i as t,c as s,S as i,s as r,e as o,o as d,m as l,d as u,f as m,r as c,q as f,g as v,h as p,j as g,u as h,k as b,l as w,v as $,w as x,x as y,ar as j}from"./client.2b5e555d.js";import{C as D}from"./Code.44790881.js";import"./index.d663be99.js";import{D as R}from"./index.eb8405e0.js";import"./index.ed941b85.js";function E(e){var n,a,t,s,i;return(a=new R({props:{data:e[0],loading:e[1],columns:[{label:"ID",field:"id",class:"md:w-10"},{label:"Ep.",value:I,class:"md:w-10",editable:!1},{field:"name",class:"md:w-10"},{field:"summary",textarea:!0,value:T,add:"text-sm text-gray-700 caption md:w-full sm:w-64",remove:"text-right",headerRemove:"justify-end",iconAfter:!0},{field:"thumbnail",value:k,class:"w-48",sortable:!1,editable:!1,headerRemove:"justify-end"}]}})).$on("update",e[2]),s=new D({props:{code:'<script>\n  import { DataTable } from "smelte";\n\n  let data = [];\n  let loading = true;\n\n  async function getData() {\n    if (typeof window === "undefined") return;\n\n    loading = true;\n    const res = await fetch("data.json");\n    const body = await res.json();\n\n    data = body._embedded.episodes;\n\n    setTimeout(() => loading = false, 500);\n  }\n\n  getData();\n<\/script>\n\n<div class="overflow-auto p-1">\n  <DataTable\n    {data}\n    {loading}\n    on:update={({ detail }) => {\n      const { column, item, value } = detail;\n\n      const index = data.findIndex(i => i.id === item.id);\n\n      data[index][column.field] = value;\n    }}\n    columns={[\n      { label: "ID", field: "id", class: "md:w-10", },\n      {\n        label: "Ep.",\n        value: (v) => `S${v.season}E${v.number}`,\n        class: "md:w-10",\n        editable: false,\n      },\n      { field: "name", class: "md:w-10" },\n      {\n        field: "summary",\n        textarea: true,\n        value: v => v && v.summary ? v.summary : "",\n        add: "text-sm text-gray-700 caption md:w-full sm:w-64",\n        remove: "text-right",\n        headerRemove: "justify-end",\n        iconAfter: true,\n      },\n      {\n        field: "thumbnail",\n        value: (v) => v && v.image\n          ? `<img src="${v.image.medium.replace("http", "https")}" height="70" alt="${v.name}">`\n          : "",\n        class: "w-48",\n        sortable: false,\n        editable: false,\n        headerRemove: "justify-end",\n      }\n    ]}\n  />\n</div>'}}),{c:function(){n=o("div"),d(a.$$.fragment),t=l(),d(s.$$.fragment),this.h()},l:function(e){n=u(e,"DIV",{class:!0});var i=m(n);c(a.$$.fragment,i),t=f(i),c(s.$$.fragment,i),i.forEach(v),this.h()},h:function(){p(n,"class","overflow-auto p-1")},m:function(e,r){g(e,n,r),h(a,n,null),b(n,t),h(s,n,null),i=!0},p:function(e,n){var t=w(n,1)[0],s={};1&t&&(s.data=e[0]),2&t&&(s.loading=e[1]),a.$set(s)},i:function(e){i||($(a.$$.fragment,e),$(s.$$.fragment,e),i=!0)},o:function(e){x(a.$$.fragment,e),x(s.$$.fragment,e),i=!1},d:function(e){e&&v(n),y(a),y(s)}}}var I=function(e){return"S".concat(e.season,"E").concat(e.number)},T=function(e){return e&&e.summary?e.summary:""},k=function(e){return e&&e.image?'<img src="'.concat(e.image.medium.replace("http","https"),'" height="70" alt="').concat(e.name,'">'):""};function S(e,n,a){var t=[],s=!0;function i(){return(i=j(regeneratorRuntime.mark((function e(){var n,i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if("undefined"!=typeof window){e.next=2;break}return e.abrupt("return");case 2:return a(1,s=!0),e.next=5,fetch("data.json");case 5:return n=e.sent,e.next=8,n.json();case 8:i=e.sent,a(0,t=i._embedded.episodes),setTimeout((function(){return a(1,s=!1)}),500);case 11:case"end":return e.stop()}}),e)})))).apply(this,arguments)}!function(){i.apply(this,arguments)}();return[t,s,function(e){var n=e.detail,s=n.column,i=n.item,r=n.value,o=t.findIndex((function(e){return e.id===i.id}));a(0,t[o][s.field]=r,t)}]}var _=function(o){e(l,i);var d=n(l);function l(e){var n;return a(this,l),n=d.call(this),t(s(n),e,S,E,r,{}),n}return l}();export default _;
