import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, v as validate_slots, e as element, t as text, k as space, o as create_component, c as claim_element, a as children, l as claim_text, b as detach_dev, m as claim_space, p as claim_component, f as add_location, g as attr_dev, h as insert_dev, j as append_dev, q as mount_component, n as noop, r as transition_in, u as transition_out, w as destroy_component } from './client.7a6793f2.js';
import { C as Code } from './Code.129a7a7f.js';
import { T as TextField, L as Label } from './index.762ff2ef.js';
import { D as DataTable } from './index.5249d0d6.js';
import './index.4dd88246.js';
import { P as PropsTable } from './PropsTable.6e65dadf.js';

var textFields = "<script>\n  import { TextField } from \"smelte\";\n</script>\n\n<h6 class=\"mb-3 mt-6\">Basic</h6>\n<TextField label=\"Test label\" />\n<h6 class=\"mb-3 mt-6\">With hint</h6>\n<TextField label=\"Test label\" hint=\"Test hint\" persistentHint color=\"blue\" />\n<h6 class=\"mb-3 mt-6\">With error</h6>\n<TextField label=\"Test label\" error=\"Test error\" />\n<h6 class=\"mb-3 mt-6\">Outlined</h6>\n<TextField label=\"Test label\" outlined />\n<h6 class=\"mb-3 mt-6\">Outlined with hint</h6>\n<TextField label=\"Test label\" outlined hint=\"Test hint\" />\n<h6 class=\"mb-3 mt-6\">Outlined with error</h6>\n<TextField label=\"Test label\" outlined error=\"Test error\" />\n<h6 class=\"mb-3 mt-6\">Outlined textarea</h6>\n<TextField label=\"Test label\" textarea rows=\"5\" outlined />\n<h6 class=\"mb-3 mt-6\">With basic validation (type=\"number\" min=\"10\" max=\"100\")</h6>\n<TextField label=\"Test label\" outlined type=\"number\" min=\"10\" max=\"100\" />";

/* src/routes/components/text-fields.svelte generated by Svelte v3.24.0 */
const file = "src/routes/components/text-fields.svelte";

function create_fragment(ctx) {
  let blockquote;
  let p0;
  let t0;
  let t1;
  let h60;
  let t2;
  let t3;
  let textfield0;
  let t4;
  let h61;
  let t5;
  let t6;
  let p1;
  let t7;
  let span0;
  let t8;
  let t9;
  let span1;
  let t10;
  let t11;
  let t12;
  let propstable;
  let t13;
  let h62;
  let t14;
  let t15;
  let textfield1;
  let t16;
  let h63;
  let t17;
  let t18;
  let textfield2;
  let t19;
  let h64;
  let t20;
  let t21;
  let textfield3;
  let t22;
  let h65;
  let t23;
  let t24;
  let textfield4;
  let t25;
  let h66;
  let t26;
  let t27;
  let textfield5;
  let t28;
  let h67;
  let t29;
  let t30;
  let textfield6;
  let t31;
  let h68;
  let t32;
  let t33;
  let textfield7;
  let t34;
  let h69;
  let t35;
  let t36;
  let textfield8;
  let t37;
  let h610;
  let t38;
  let t39;
  let textfield9;
  let t40;
  let textfield10;
  let t41;
  let h611;
  let t42;
  let t43;
  let textfield11;
  let t44;
  let textfield12;
  let t45;
  let code;
  let current;
  textfield0 = new TextField({
    props: {
      label: "Test label"
    },
    $$inline: true
  });
  propstable = new PropsTable({
    props: {
      data: [{
        prop: "value",
        description: "Input value",
        type: "Boolean",
        default: "null"
      }, {
        prop: "color",
        description: "Color variant, accepts any of the main colors described in Tailwind config",
        type: "String",
        default: "primary"
      }, {
        prop: "label",
        description: "Input label",
        type: "String",
        default: "Empty&nbsp;string"
      }, {
        prop: "placeholder",
        description: "Input placeholder",
        type: "String",
        default: "Empty&nbsp;string"
      }, {
        prop: "outlined",
        description: "Outlined variant",
        type: "Boolean",
        default: "false"
      }, {
        prop: "hint",
        description: "Hint text appearing under the input",
        type: "String",
        default: "Empty&nbsp;string"
      }, {
        prop: "error",
        description: "Error text under the input",
        type: "String | Boolean",
        default: "false"
      }, {
        prop: "append",
        description: "Append icon name",
        type: "String",
        default: "Empty&nbsp;string"
      }, {
        prop: "prepend",
        description: "Prepend icon name",
        type: "String",
        default: "Empty&nbsp;string"
      }, {
        prop: "persistentHint",
        description: "Always show hint, not only on focus",
        type: "Boolean",
        default: "false"
      }, {
        prop: "textarea",
        description: "Whether text field is textarea",
        type: "Boolean",
        default: "false"
      }, {
        prop: "rows",
        description: "Rows count for textarea",
        type: "Integer",
        default: 5
      }, {
        prop: "select",
        description: "Whether text field is select",
        type: "Boolean",
        default: "false"
      }, {
        prop: "autocomplete",
        description: "Whether select field is autocomplete",
        type: "Boolean",
        default: "false"
      }, {
        prop: "noUnderline",
        description: "Hide focus underline element",
        type: "Boolean",
        default: "false"
      }, {
        prop: "appendReverse",
        description: "Reverse appended icon",
        type: "Boolean",
        default: "false"
      }, {
        prop: "prependReverse",
        description: "Reverse prepended icon",
        type: "Boolean",
        default: "false"
      }, {
        prop: "bgColor",
        description: "Background color to match for outlined elevated label",
        type: "String",
        default: "white"
      }, {
        prop: "iconClasses",
        description: "Classes to pass down to icon component",
        type: "String",
        default: "Empty&nbsp;string"
      }]
    },
    $$inline: true
  });
  textfield1 = new TextField({
    props: {
      label: "Test label",
      hint: "Test hint",
      persistentHint: true,
      color: "blue"
    },
    $$inline: true
  });
  textfield2 = new TextField({
    props: {
      label: "Test label",
      hint: "Test hint",
      persistentHint: true,
      color: "blue",
      dense: true
    },
    $$inline: true
  });
  textfield3 = new TextField({
    props: {
      label: "Test label",
      error: "Test error"
    },
    $$inline: true
  });
  textfield4 = new TextField({
    props: {
      label: "Test label",
      outlined: true
    },
    $$inline: true
  });
  textfield5 = new TextField({
    props: {
      label: "Test label",
      outlined: true,
      hint: "Test hint"
    },
    $$inline: true
  });
  textfield6 = new TextField({
    props: {
      label: "Test label",
      outlined: true,
      error: "Test error"
    },
    $$inline: true
  });
  textfield7 = new TextField({
    props: {
      label: "Test label",
      textarea: true,
      rows: "5",
      outlined: true
    },
    $$inline: true
  });
  textfield8 = new TextField({
    props: {
      label: "Test label",
      outlined: true,
      type: "number",
      min: "10",
      max: "100"
    },
    $$inline: true
  });
  textfield9 = new TextField({
    props: {
      prepend: "search",
      label: "Icon before"
    },
    $$inline: true
  });
  textfield10 = new TextField({
    props: {
      append: "search",
      label: "Icon after"
    },
    $$inline: true
  });
  textfield11 = new TextField({
    props: {
      disabled: true,
      prepend: "search",
      label: "Icon before"
    },
    $$inline: true
  });
  textfield12 = new TextField({
    props: {
      disabled: true,
      append: "search",
      label: "Icon after"
    },
    $$inline: true
  });
  code = new Code({
    props: {
      code: textFields
    },
    $$inline: true
  });
  const block = {
    c: function create() {
      blockquote = element("blockquote");
      p0 = element("p");
      t0 = text("Text fields let users enter and edit text.");
      t1 = space();
      h60 = element("h6");
      t2 = text("Basic");
      t3 = space();
      create_component(textfield0.$$.fragment);
      t4 = space();
      h61 = element("h6");
      t5 = text("Props");
      t6 = space();
      p1 = element("p");
      t7 = text("Inputs accept any props that a normal input element can take,\nlike ");
      span0 = element("span");
      t8 = text("max-length");
      t9 = text(" or ");
      span1 = element("span");
      t10 = text("type");
      t11 = text(".");
      t12 = space();
      create_component(propstable.$$.fragment);
      t13 = space();
      h62 = element("h6");
      t14 = text("With hint");
      t15 = space();
      create_component(textfield1.$$.fragment);
      t16 = space();
      h63 = element("h6");
      t17 = text("With hint (dense)");
      t18 = space();
      create_component(textfield2.$$.fragment);
      t19 = space();
      h64 = element("h6");
      t20 = text("With error");
      t21 = space();
      create_component(textfield3.$$.fragment);
      t22 = space();
      h65 = element("h6");
      t23 = text("Outlined");
      t24 = space();
      create_component(textfield4.$$.fragment);
      t25 = space();
      h66 = element("h6");
      t26 = text("Outlined with hint");
      t27 = space();
      create_component(textfield5.$$.fragment);
      t28 = space();
      h67 = element("h6");
      t29 = text("Outlined with error");
      t30 = space();
      create_component(textfield6.$$.fragment);
      t31 = space();
      h68 = element("h6");
      t32 = text("Outlined textarea");
      t33 = space();
      create_component(textfield7.$$.fragment);
      t34 = space();
      h69 = element("h6");
      t35 = text("With basic validation (type=\"number\" min=\"10\" max=\"100\")");
      t36 = space();
      create_component(textfield8.$$.fragment);
      t37 = space();
      h610 = element("h6");
      t38 = text("With icon");
      t39 = space();
      create_component(textfield9.$$.fragment);
      t40 = space();
      create_component(textfield10.$$.fragment);
      t41 = space();
      h611 = element("h6");
      t42 = text("Disabled");
      t43 = space();
      create_component(textfield11.$$.fragment);
      t44 = space();
      create_component(textfield12.$$.fragment);
      t45 = space();
      create_component(code.$$.fragment);
      this.h();
    },
    l: function claim(nodes) {
      blockquote = claim_element(nodes, "BLOCKQUOTE", {
        class: true,
        cite: true
      });
      var blockquote_nodes = children(blockquote);
      p0 = claim_element(blockquote_nodes, "P", {});
      var p0_nodes = children(p0);
      t0 = claim_text(p0_nodes, "Text fields let users enter and edit text.");
      p0_nodes.forEach(detach_dev);
      blockquote_nodes.forEach(detach_dev);
      t1 = claim_space(nodes);
      h60 = claim_element(nodes, "H6", {
        class: true
      });
      var h60_nodes = children(h60);
      t2 = claim_text(h60_nodes, "Basic");
      h60_nodes.forEach(detach_dev);
      t3 = claim_space(nodes);
      claim_component(textfield0.$$.fragment, nodes);
      t4 = claim_space(nodes);
      h61 = claim_element(nodes, "H6", {});
      var h61_nodes = children(h61);
      t5 = claim_text(h61_nodes, "Props");
      h61_nodes.forEach(detach_dev);
      t6 = claim_space(nodes);
      p1 = claim_element(nodes, "P", {
        class: true
      });
      var p1_nodes = children(p1);
      t7 = claim_text(p1_nodes, "Inputs accept any props that a normal input element can take,\nlike ");
      span0 = claim_element(p1_nodes, "SPAN", {
        class: true
      });
      var span0_nodes = children(span0);
      t8 = claim_text(span0_nodes, "max-length");
      span0_nodes.forEach(detach_dev);
      t9 = claim_text(p1_nodes, " or ");
      span1 = claim_element(p1_nodes, "SPAN", {
        class: true
      });
      var span1_nodes = children(span1);
      t10 = claim_text(span1_nodes, "type");
      span1_nodes.forEach(detach_dev);
      t11 = claim_text(p1_nodes, ".");
      p1_nodes.forEach(detach_dev);
      t12 = claim_space(nodes);
      claim_component(propstable.$$.fragment, nodes);
      t13 = claim_space(nodes);
      h62 = claim_element(nodes, "H6", {
        class: true
      });
      var h62_nodes = children(h62);
      t14 = claim_text(h62_nodes, "With hint");
      h62_nodes.forEach(detach_dev);
      t15 = claim_space(nodes);
      claim_component(textfield1.$$.fragment, nodes);
      t16 = claim_space(nodes);
      h63 = claim_element(nodes, "H6", {
        class: true
      });
      var h63_nodes = children(h63);
      t17 = claim_text(h63_nodes, "With hint (dense)");
      h63_nodes.forEach(detach_dev);
      t18 = claim_space(nodes);
      claim_component(textfield2.$$.fragment, nodes);
      t19 = claim_space(nodes);
      h64 = claim_element(nodes, "H6", {
        class: true
      });
      var h64_nodes = children(h64);
      t20 = claim_text(h64_nodes, "With error");
      h64_nodes.forEach(detach_dev);
      t21 = claim_space(nodes);
      claim_component(textfield3.$$.fragment, nodes);
      t22 = claim_space(nodes);
      h65 = claim_element(nodes, "H6", {
        class: true
      });
      var h65_nodes = children(h65);
      t23 = claim_text(h65_nodes, "Outlined");
      h65_nodes.forEach(detach_dev);
      t24 = claim_space(nodes);
      claim_component(textfield4.$$.fragment, nodes);
      t25 = claim_space(nodes);
      h66 = claim_element(nodes, "H6", {
        class: true
      });
      var h66_nodes = children(h66);
      t26 = claim_text(h66_nodes, "Outlined with hint");
      h66_nodes.forEach(detach_dev);
      t27 = claim_space(nodes);
      claim_component(textfield5.$$.fragment, nodes);
      t28 = claim_space(nodes);
      h67 = claim_element(nodes, "H6", {
        class: true
      });
      var h67_nodes = children(h67);
      t29 = claim_text(h67_nodes, "Outlined with error");
      h67_nodes.forEach(detach_dev);
      t30 = claim_space(nodes);
      claim_component(textfield6.$$.fragment, nodes);
      t31 = claim_space(nodes);
      h68 = claim_element(nodes, "H6", {
        class: true
      });
      var h68_nodes = children(h68);
      t32 = claim_text(h68_nodes, "Outlined textarea");
      h68_nodes.forEach(detach_dev);
      t33 = claim_space(nodes);
      claim_component(textfield7.$$.fragment, nodes);
      t34 = claim_space(nodes);
      h69 = claim_element(nodes, "H6", {
        class: true
      });
      var h69_nodes = children(h69);
      t35 = claim_text(h69_nodes, "With basic validation (type=\"number\" min=\"10\" max=\"100\")");
      h69_nodes.forEach(detach_dev);
      t36 = claim_space(nodes);
      claim_component(textfield8.$$.fragment, nodes);
      t37 = claim_space(nodes);
      h610 = claim_element(nodes, "H6", {
        class: true
      });
      var h610_nodes = children(h610);
      t38 = claim_text(h610_nodes, "With icon");
      h610_nodes.forEach(detach_dev);
      t39 = claim_space(nodes);
      claim_component(textfield9.$$.fragment, nodes);
      t40 = claim_space(nodes);
      claim_component(textfield10.$$.fragment, nodes);
      t41 = claim_space(nodes);
      h611 = claim_element(nodes, "H6", {
        class: true
      });
      var h611_nodes = children(h611);
      t42 = claim_text(h611_nodes, "Disabled");
      h611_nodes.forEach(detach_dev);
      t43 = claim_space(nodes);
      claim_component(textfield11.$$.fragment, nodes);
      t44 = claim_space(nodes);
      claim_component(textfield12.$$.fragment, nodes);
      t45 = claim_space(nodes);
      claim_component(code.$$.fragment, nodes);
      this.h();
    },
    h: function hydrate() {
      add_location(p0, file, 11, 2, 403);
      attr_dev(blockquote, "class", "pl-8 mt-2 mb-10 border-l-8 border-primary-300 text-lg");
      attr_dev(blockquote, "cite", "https://material.io/components/text-fields/#");
      add_location(blockquote, file, 8, 0, 270);
      attr_dev(h60, "class", "mb-3 mt-6");
      add_location(h60, file, 14, 0, 468);
      add_location(h61, file, 17, 0, 535);
      attr_dev(span0, "class", "code-inline");
      add_location(span0, file, 19, 5, 638);
      attr_dev(span1, "class", "code-inline");
      add_location(span1, file, 19, 52, 685);
      attr_dev(p1, "class", "mb-5 mt-3");
      add_location(p1, file, 18, 0, 550);
      attr_dev(h62, "class", "mb-3 mt-6");
      add_location(h62, file, 44, 0, 2849);
      attr_dev(h63, "class", "mb-3 mt-6");
      add_location(h63, file, 46, 0, 2964);
      attr_dev(h64, "class", "mb-3 mt-6");
      add_location(h64, file, 48, 0, 3093);
      attr_dev(h65, "class", "mb-3 mt-6");
      add_location(h65, file, 50, 0, 3183);
      attr_dev(h66, "class", "mb-3 mt-6");
      add_location(h66, file, 52, 0, 3261);
      attr_dev(h67, "class", "mb-3 mt-6");
      add_location(h67, file, 54, 0, 3366);
      attr_dev(h68, "class", "mb-3 mt-6");
      add_location(h68, file, 56, 0, 3474);
      attr_dev(h69, "class", "mb-3 mt-6");
      add_location(h69, file, 58, 0, 3579);
      attr_dev(h610, "class", "mb-3 mt-6");
      add_location(h610, file, 60, 0, 3738);
      attr_dev(h611, "class", "mb-3 mt-6");
      add_location(h611, file, 63, 0, 3875);
    },
    m: function mount(target, anchor) {
      insert_dev(target, blockquote, anchor);
      append_dev(blockquote, p0);
      append_dev(p0, t0);
      insert_dev(target, t1, anchor);
      insert_dev(target, h60, anchor);
      append_dev(h60, t2);
      insert_dev(target, t3, anchor);
      mount_component(textfield0, target, anchor);
      insert_dev(target, t4, anchor);
      insert_dev(target, h61, anchor);
      append_dev(h61, t5);
      insert_dev(target, t6, anchor);
      insert_dev(target, p1, anchor);
      append_dev(p1, t7);
      append_dev(p1, span0);
      append_dev(span0, t8);
      append_dev(p1, t9);
      append_dev(p1, span1);
      append_dev(span1, t10);
      append_dev(p1, t11);
      insert_dev(target, t12, anchor);
      mount_component(propstable, target, anchor);
      insert_dev(target, t13, anchor);
      insert_dev(target, h62, anchor);
      append_dev(h62, t14);
      insert_dev(target, t15, anchor);
      mount_component(textfield1, target, anchor);
      insert_dev(target, t16, anchor);
      insert_dev(target, h63, anchor);
      append_dev(h63, t17);
      insert_dev(target, t18, anchor);
      mount_component(textfield2, target, anchor);
      insert_dev(target, t19, anchor);
      insert_dev(target, h64, anchor);
      append_dev(h64, t20);
      insert_dev(target, t21, anchor);
      mount_component(textfield3, target, anchor);
      insert_dev(target, t22, anchor);
      insert_dev(target, h65, anchor);
      append_dev(h65, t23);
      insert_dev(target, t24, anchor);
      mount_component(textfield4, target, anchor);
      insert_dev(target, t25, anchor);
      insert_dev(target, h66, anchor);
      append_dev(h66, t26);
      insert_dev(target, t27, anchor);
      mount_component(textfield5, target, anchor);
      insert_dev(target, t28, anchor);
      insert_dev(target, h67, anchor);
      append_dev(h67, t29);
      insert_dev(target, t30, anchor);
      mount_component(textfield6, target, anchor);
      insert_dev(target, t31, anchor);
      insert_dev(target, h68, anchor);
      append_dev(h68, t32);
      insert_dev(target, t33, anchor);
      mount_component(textfield7, target, anchor);
      insert_dev(target, t34, anchor);
      insert_dev(target, h69, anchor);
      append_dev(h69, t35);
      insert_dev(target, t36, anchor);
      mount_component(textfield8, target, anchor);
      insert_dev(target, t37, anchor);
      insert_dev(target, h610, anchor);
      append_dev(h610, t38);
      insert_dev(target, t39, anchor);
      mount_component(textfield9, target, anchor);
      insert_dev(target, t40, anchor);
      mount_component(textfield10, target, anchor);
      insert_dev(target, t41, anchor);
      insert_dev(target, h611, anchor);
      append_dev(h611, t42);
      insert_dev(target, t43, anchor);
      mount_component(textfield11, target, anchor);
      insert_dev(target, t44, anchor);
      mount_component(textfield12, target, anchor);
      insert_dev(target, t45, anchor);
      mount_component(code, target, anchor);
      current = true;
    },
    p: noop,
    i: function intro(local) {
      if (current) return;
      transition_in(textfield0.$$.fragment, local);
      transition_in(propstable.$$.fragment, local);
      transition_in(textfield1.$$.fragment, local);
      transition_in(textfield2.$$.fragment, local);
      transition_in(textfield3.$$.fragment, local);
      transition_in(textfield4.$$.fragment, local);
      transition_in(textfield5.$$.fragment, local);
      transition_in(textfield6.$$.fragment, local);
      transition_in(textfield7.$$.fragment, local);
      transition_in(textfield8.$$.fragment, local);
      transition_in(textfield9.$$.fragment, local);
      transition_in(textfield10.$$.fragment, local);
      transition_in(textfield11.$$.fragment, local);
      transition_in(textfield12.$$.fragment, local);
      transition_in(code.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(textfield0.$$.fragment, local);
      transition_out(propstable.$$.fragment, local);
      transition_out(textfield1.$$.fragment, local);
      transition_out(textfield2.$$.fragment, local);
      transition_out(textfield3.$$.fragment, local);
      transition_out(textfield4.$$.fragment, local);
      transition_out(textfield5.$$.fragment, local);
      transition_out(textfield6.$$.fragment, local);
      transition_out(textfield7.$$.fragment, local);
      transition_out(textfield8.$$.fragment, local);
      transition_out(textfield9.$$.fragment, local);
      transition_out(textfield10.$$.fragment, local);
      transition_out(textfield11.$$.fragment, local);
      transition_out(textfield12.$$.fragment, local);
      transition_out(code.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(blockquote);
      if (detaching) detach_dev(t1);
      if (detaching) detach_dev(h60);
      if (detaching) detach_dev(t3);
      destroy_component(textfield0, detaching);
      if (detaching) detach_dev(t4);
      if (detaching) detach_dev(h61);
      if (detaching) detach_dev(t6);
      if (detaching) detach_dev(p1);
      if (detaching) detach_dev(t12);
      destroy_component(propstable, detaching);
      if (detaching) detach_dev(t13);
      if (detaching) detach_dev(h62);
      if (detaching) detach_dev(t15);
      destroy_component(textfield1, detaching);
      if (detaching) detach_dev(t16);
      if (detaching) detach_dev(h63);
      if (detaching) detach_dev(t18);
      destroy_component(textfield2, detaching);
      if (detaching) detach_dev(t19);
      if (detaching) detach_dev(h64);
      if (detaching) detach_dev(t21);
      destroy_component(textfield3, detaching);
      if (detaching) detach_dev(t22);
      if (detaching) detach_dev(h65);
      if (detaching) detach_dev(t24);
      destroy_component(textfield4, detaching);
      if (detaching) detach_dev(t25);
      if (detaching) detach_dev(h66);
      if (detaching) detach_dev(t27);
      destroy_component(textfield5, detaching);
      if (detaching) detach_dev(t28);
      if (detaching) detach_dev(h67);
      if (detaching) detach_dev(t30);
      destroy_component(textfield6, detaching);
      if (detaching) detach_dev(t31);
      if (detaching) detach_dev(h68);
      if (detaching) detach_dev(t33);
      destroy_component(textfield7, detaching);
      if (detaching) detach_dev(t34);
      if (detaching) detach_dev(h69);
      if (detaching) detach_dev(t36);
      destroy_component(textfield8, detaching);
      if (detaching) detach_dev(t37);
      if (detaching) detach_dev(h610);
      if (detaching) detach_dev(t39);
      destroy_component(textfield9, detaching);
      if (detaching) detach_dev(t40);
      destroy_component(textfield10, detaching);
      if (detaching) detach_dev(t41);
      if (detaching) detach_dev(h611);
      if (detaching) detach_dev(t43);
      destroy_component(textfield11, detaching);
      if (detaching) detach_dev(t44);
      destroy_component(textfield12, detaching);
      if (detaching) detach_dev(t45);
      destroy_component(code, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_fragment.name,
    type: "component",
    source: "",
    ctx
  });
  return block;
}

function instance($$self, $$props, $$invalidate) {
  const writable_props = [];
  Object.keys($$props).forEach(key => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Text_fields> was created with unknown prop '${key}'`);
  });
  let {
    $$slots = {},
    $$scope
  } = $$props;
  validate_slots("Text_fields", $$slots, []);

  $$self.$capture_state = () => ({
    TextField,
    Label,
    DataTable,
    Code,
    PropsTable,
    textFields
  });

  return [];
}

class Text_fields extends SvelteComponentDev {
  constructor(options) {
    super(options);
    init(this, options, instance, create_fragment, safe_not_equal, {});
    dispatch_dev("SvelteRegisterComponent", {
      component: this,
      tagName: "Text_fields",
      options,
      id: create_fragment.name
    });
  }

}

export default Text_fields;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
